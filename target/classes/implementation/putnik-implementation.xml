<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:crc32="http://www.mulesoft.org/schema/mule/crc32" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:oauth2-provider="http://www.mulesoft.org/schema/mule/oauth2-provider" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd">
    <file:connector name="File" autoDelete="true" outputAppend="true" streaming="true" validateConnections="true" doc:name="File"/>
    <flow name="PutnikGetAll">
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:dynamic-query><![CDATA[SELECT * from db.Putnik where ImePut like '%#[message.inboundProperties.'http.query.params'.search]%']]></db:dynamic-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
	PutnikID: payload01.PutnikID,
	ImePut: payload01.ImePut,
	PrezimePut: payload01.PrezimePut,
	JMBGPut: payload01.JMBGPut,
	BrojPasosa: payload01.BrojPasosa,
	KontaktPut: payload01.KontaktPut,
	AdresaPut: payload01.AdresaPut,
	mailPut: payload01.mailPut

	})]]></dw:set-payload>
        </dw:transform-message>
        <async doc:name="Async">
            <flow-ref name="PutnikLogging" doc:name="Flow Reference"/>
        </async>
        <set-payload value="#[payload]" doc:name="Set Payload"/>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-property propertyName="http.status" value="500" doc:name="Property"/>
            <set-payload value="{message:&quot;Error&quot;}" doc:name="Set Payload"/>
        </catch-exception-strategy>
    </flow>
    <flow name="PutnikPost">
        <async doc:name="Async">
            <flow-ref name="PutnikLogging" doc:name="Flow Reference"/>
        </async>
        <json:json-to-object-transformer doc:name="JSON to Object" returnClass="java.util.HashMap"/>
        <db:insert config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[INSERT INTO db.Putnik
(ImePut,PrezimePut,JMBGPut, BrojPasosa,KontaktPut, AdresaPut, mailPut)
VALUES (#[payload.ImePut],#[payload.PrezimePut],#[payload.JMBGPut],#[payload.BrojPasosa],#[payload.KontaktPut],#[payload.AdresaPut],#[payload.mailPut])]]></db:parameterized-query>
        </db:insert>
        <choice doc:name="Choice">
            <when expression="#[payload != 1]">
                <set-property propertyName="http.status" value="400" doc:name="Property"/>
                <set-payload value="{&quot;message&quot;:&quot;Greska pri dodavanju putnika!!&quot;}" doc:name="Set Payload"/>
            </when>
            <otherwise>
                <set-property propertyName="http.status" value="201" doc:name="Property"/>
                <set-payload value="{&quot;message&quot;:&quot;Uspesno ste dodali putnika!&quot;}" doc:name="Set Payload"/>
            </otherwise>
        </choice>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-property propertyName="http.status" value="500" doc:name="Property"/>
            <set-payload value="{message:&quot;Error&quot;}" doc:name="Set Payload"/>
        </catch-exception-strategy>
    </flow>
    <flow name="PutnikGetByID">
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:dynamic-query><![CDATA[SELECT * from db.Putnik
			 where PutnikID= #[message.inboundProperties.'http.uri.params'.id]]]></db:dynamic-query>
        </db:select>
        <choice doc:name="Choice">
            <when expression="#[payload.size()!=1]">
                <set-property propertyName="http.status" value="404" doc:name="Property"/>
                <set-payload value="{&quot;message&quot;:&quot;Putnik  not found!&quot;}" doc:name="Set Payload"/>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
	PutnikID: payload01.PutnikID,
	ImePut: payload01.ImePut,
	PrezimePut: payload01.PrezimePut,
	JMBGPut: payload01.JMBGPut,
	BrojPasosa: payload01.BrojPasosa,
	KontaktPut: payload01.KontaktPut,
	AdresaPut: payload01.AdresaPut,
	mailPut: payload01.mailPut
	
	})]]></dw:set-payload>
                </dw:transform-message>
                <set-property propertyName="http.status" value="200" doc:name="Property"/>
                <set-payload value="#[payload]" doc:name="Set Payload"/>
            </otherwise>
        </choice>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-property propertyName="http.status" value="500" doc:name="Property"/>
            <set-payload value="{message:&quot;Error&quot;}" doc:name="Set Payload"/>
        </catch-exception-strategy>
    </flow>
    <flow name="PutnikPutByID">
        <json:json-to-object-transformer doc:name="JSON to Object" returnClass="java.util.HashMap"/>
        <db:update config-ref="MySQL_Configuration" doc:name="Database">
            <db:dynamic-query><![CDATA[UPDATE db.Putnik
set ImePut= '#[payload.ImePut]',
PrezimePut= '#[payload.PrezimePut]',
JMBGPut= #[payload.JMBGPut],
BrojPasosa= '#[payload.BrojPasosa]',
KontaktPut= '#[payload.KontaktPut]',
AdresaPut= '#[payload.AdresaPut]',
mailPut= '#[payload.mailPut]'
where PutnikID=#[message.inboundProperties.'http.uri.params'.id]]]></db:dynamic-query>
        </db:update>
        <choice doc:name="Choice">
            <when expression="#[payload != 1]">
                <set-property propertyName="http.status" value="400" doc:name="Property"/>
                <set-payload value="{&quot;message&quot;:&quot;Cant update putnik&quot;}" doc:name="Set Payload"/>
            </when>
            <otherwise>
                <set-property propertyName="http.status" value="200" doc:name="Property"/>
                <set-payload value="{&quot;message&quot;:&quot;Putnik updated!&quot;}" doc:name="Set Payload"/>
            </otherwise>
        </choice>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-property propertyName="http.status" value="500" doc:name="Property"/>
            <set-payload value="{message:&quot;Error&quot;}" doc:name="Set Payload"/>
        </catch-exception-strategy>
    </flow>
    <flow name="PutnikDeleteByID">
        <db:delete config-ref="MySQL_Configuration" doc:name="Database">
            <db:dynamic-query><![CDATA[Delete from db.Putnik where PutnikID= #[message.inboundProperties.'http.uri.params'.id]]]></db:dynamic-query>
        </db:delete>
        <choice doc:name="Choice">
            <when expression="#[payload != 1]">
                <set-property propertyName="http.status" value="400" doc:name="Property"/>
                <set-payload value="{&quot;message&quot;:&quot;Cant delete putnik&quot;}" doc:name="Set Payload"/>
            </when>
            <otherwise>
                <set-property propertyName="http.status" value="200" doc:name="Property"/>
                <set-payload value="{&quot;message&quot;:&quot;Putnik deleted!&quot;}" doc:name="Set Payload"/>
            </otherwise>
        </choice>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-property propertyName="http.status" value="500" doc:name="Property"/>
            <set-payload value="{message:&quot;Error&quot;}" doc:name="Set Payload"/>
        </catch-exception-strategy>
    </flow>
    <flow name="PutnikLogging">
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <file:outbound-endpoint path="..\files" outputPattern="PutnikGet.txt" connector-ref="File" responseTimeout="10000" doc:name="File"/>
    </flow>
</mule>
